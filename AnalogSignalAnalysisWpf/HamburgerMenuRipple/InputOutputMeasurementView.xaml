<UserControl x:Class="AnalogSignalAnalysisWpf.InputOutputMeasurementView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AnalogSignalAnalysisWpf"
             xmlns:livedata="clr-namespace:AnalogSignalAnalysisWpf.LiveData"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:chart="http://sparrowtoolkit.codeplex.com/wpf"
             xmlns:converters="clr-namespace:AnalogSignalAnalysisWpf.Converters"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance local:InputOutputMeasurementViewModel}"
             d:DesignHeight="600" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BoolToColorConverter x:Key="BoolToColorConverter" />
            <converters:BoolToInvertConverter x:Key="BoolToInvertConverter" />
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
            <Style x:Key="containerStyle" TargetType="Border">
                <Setter Property="BorderBrush" Value="#FFAAFFAA"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Style>
            <Style TargetType="{x:Type Line}" x:Key="crossLineStyle">
                <Setter Property="Stroke" Value="#FFAAFFAA"/>
                <Setter Property="StrokeThickness" Value="1"/>
            </Style>
            <Style TargetType="{x:Type Line}" x:Key="axisLineStyle">
                <Setter Property="Stroke" Value="#FFAAFFAA"/>
                <Setter Property="StrokeThickness" Value="0"/>
            </Style>
            <Style TargetType="{x:Type Line}" x:Key="minorcrossLineStyle">
                <Setter Property="Stroke" Value="#FF225633"/>
                <Setter Property="StrokeThickness" Value="0.25"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Margin="10">
        <!--<Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="15"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>-->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>

        <StackPanel >
            <DockPanel Grid.Row="0">
                <!--<TextBlock DockPanel.Dock="Top" FontSize="16">输入电压</TextBlock>-->
                <chart:SparrowChart Foreground="White" FontFamily="Arial" ContainerBorderStyle="{StaticResource containerStyle}" Margin="5" MinHeight="200">
                    <chart:SparrowChart.Background>
                        <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                            <GradientStop Color="#FF00170B" Offset="0"/>
                            <GradientStop Color="#FF005C2C" Offset="0.8"/>
                        </LinearGradientBrush>
                    </chart:SparrowChart.Background>
                    <chart:SparrowChart.Legend>
                        <chart:Legend Padding="10" Header="输入输出曲线测试"/>
                    </chart:SparrowChart.Legend>
                    <chart:SparrowChart.XAxis>
                        <chart:LinearXAxis CrossLineStyle="{StaticResource crossLineStyle}" MinorLineStyle="{StaticResource minorcrossLineStyle}" MajorLineStyle="{StaticResource crossLineStyle}" AxisLineStyle="{StaticResource axisLineStyle}" MinorTicksCount="3" ShowCrossLines="True" Header="Time(ms)" StringFormat="0.0"/>
                    </chart:SparrowChart.XAxis>
                    <chart:SparrowChart.YAxis>
                        <chart:LinearYAxis CrossLineStyle="{StaticResource crossLineStyle}"  MinorLineStyle="{StaticResource minorcrossLineStyle}" MajorLineStyle="{StaticResource crossLineStyle}" MinValue="0" MaxValue="24" AxisLineStyle="{StaticResource axisLineStyle}" MinorTicksCount="3" ShowCrossLines="True" StringFormat="0.0" Header="Voltage(V)"/>
                    </chart:SparrowChart.YAxis>
                    <chart:LineSeries Label="输入电压" PointsSource="{Binding ScopeCHACollection}" Stroke="Yellow" XPath="Value" YPath="Value1" StrokeThickness="2" UseSinglePart="True"/>
                    <chart:ScatterSeries Label="有效测量" PointsSource="{Binding AVoltageEdgeCollection}" Stroke="Red" XPath="Value" YPath="Value1" ScatterSize="10"  StrokeThickness="2" UseSinglePart="True"/>
                </chart:SparrowChart>
            </DockPanel>
            <DockPanel Grid.Row="0">
                <!--<TextBlock DockPanel.Dock="Top" FontSize="16">检测气压</TextBlock>-->
                <chart:SparrowChart Foreground="White" FontFamily="Arial" ContainerBorderStyle="{StaticResource containerStyle}" Margin="5" MinHeight="200">
                    <chart:SparrowChart.Background>
                        <LinearGradientBrush EndPoint="0.504,1.5" StartPoint="0.504,0.03">
                            <GradientStop Color="#FF00170B" Offset="0"/>
                            <GradientStop Color="#FF005C2C" Offset="0.8"/>
                        </LinearGradientBrush>
                    </chart:SparrowChart.Background>
                    <chart:SparrowChart.Legend>
                        <chart:Legend Padding="10" Header="输入输出曲线测试"/>
                    </chart:SparrowChart.Legend>
                    <chart:SparrowChart.XAxis>
                        <chart:LinearXAxis CrossLineStyle="{StaticResource crossLineStyle}" MinorLineStyle="{StaticResource minorcrossLineStyle}" MajorLineStyle="{StaticResource crossLineStyle}" AxisLineStyle="{StaticResource axisLineStyle}" MinorTicksCount="3" ShowCrossLines="True" Header="Time(ms)" StringFormat="0.0"/>
                    </chart:SparrowChart.XAxis>
                    <chart:SparrowChart.YAxis>
                        <chart:LinearYAxis CrossLineStyle="{StaticResource crossLineStyle}"  MinorLineStyle="{StaticResource minorcrossLineStyle}" MajorLineStyle="{StaticResource crossLineStyle}" MinValue="0" MaxValue="1.0" AxisLineStyle="{StaticResource axisLineStyle}" MinorTicksCount="3" ShowCrossLines="True" StringFormat="0.00" Header="气压(MPa)"/>
                    </chart:SparrowChart.YAxis>
                    <chart:LineSeries Label="检测气压" PointsSource="{Binding ScopeCHBCollection}" Stroke="Red" XPath="Value" YPath="Value1" StrokeThickness="2" UseSinglePart="True"/>
                    <chart:ScatterSeries Label="有效测量" PointsSource="{Binding BVoltageEdgeCollection}" Stroke="Red" XPath="Value" YPath="Value1" ScatterSize="10"  StrokeThickness="2" UseSinglePart="True"/>
                </chart:SparrowChart>
            </DockPanel>

            <StackPanel Margin="10">
                <StackPanel Orientation="Horizontal">
                    <Button cal:Message.Attach="Start" IsEnabled="{Binding CanMeasure}" Margin="0,0,20,0" MinWidth="80">运行</Button>
                    <TextBlock Text="当前状态:" VerticalAlignment="Center" Margin="0,0,10,0"/>
                    <Ellipse Width="20" Height="20" Fill="{Binding IsMeasuring, Converter={StaticResource BoolToColorConverter}}" Margin="0,0,10,0"/>
                    <TextBox Text="{Binding RunningStatus}" IsReadOnly="True" MinWidth="60" Margin="0,0,20,0"/>
                    <StackPanel Visibility="Collapsed">
                        <TextBlock Text="输入电压(V):" VerticalAlignment="Center" Margin="0,0,10,0"/>
                        <TextBox Text="{Binding CurrentInput, StringFormat={}{0:F3}}" IsReadOnly="True" MinWidth="60" Margin="0,0,20,0"/>
                        <TextBlock Text="测量气压(MPa):" VerticalAlignment="Center" Margin="0,0,10,0"/>
                        <TextBox Text="{Binding CurrentOutput, StringFormat={}{0:F3}}" IsReadOnly="True" MinWidth="60" Margin="0,0,20,0"/>
                    </StackPanel>
                </StackPanel>
                <ListView ItemsSource="{Binding MeasurementInfos}" 
                          Margin="0,10,0,0"
                          MaxHeight="300" 
                          MinHeight="100" >
                    <ListView.View>
                        <GridView>
                            <GridViewColumn DisplayMemberBinding="{Binding DateTime}" Header="时间"/>
                            <GridViewColumn DisplayMemberBinding="{Binding Input, StringFormat={}{0:F3}}" Header="输入电压(V)"/>
                            <GridViewColumn DisplayMemberBinding="{Binding Output, StringFormat={}{0:F3}}" Header="检测气压(MPa)"/>
                            <GridViewColumn DisplayMemberBinding="{Binding Output2, StringFormat={}{0:F3}}" Header="kgf"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </StackPanel>

        </StackPanel>

        <StackPanel Grid.Column="1" Grid.RowSpan="3" Margin="10" MinWidth="150" Visibility="Collapsed">
            <DockPanel Margin="0,10,0,0">
                <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">最小测试电压(V)</TextBlock>
                <TextBox Text="{Binding MinVoltage, UpdateSourceTrigger=Explicit}"  KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus"/>
            </DockPanel>
            <DockPanel Margin="0,10,0,0">
                <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">最大测试电压(V)</TextBlock>
                <TextBox Text="{Binding MaxVoltage, UpdateSourceTrigger=Explicit}"  KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus"/>
            </DockPanel>
            <DockPanel Margin="0,10,0,0">
                <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">电压间隔(V)</TextBlock>
                <TextBox Text="{Binding VoltageInterval, UpdateSourceTrigger=Explicit}"  KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus"/>
            </DockPanel>
            <DockPanel Margin="0,10,0,0">
                <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">采样时间(MS)</TextBlock>
                <TextBox Text="{Binding SampleTime, UpdateSourceTrigger=Explicit}"  KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus"/>
            </DockPanel>
            <DockPanel Margin="0,10,0,0">
                <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">通信延迟(MS)</TextBlock>
                <TextBox Text="{Binding ComDelay, UpdateSourceTrigger=Explicit}"  KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus"/>
            </DockPanel>
            <Button cal:Message.Attach="Start" Margin="0,10,0,0">运行</Button>
        </StackPanel>

        <Expander Grid.Column="1" Grid.RowSpan="3" ExpandDirection="Left" IsExpanded="True">
            <StackPanel IsEnabled="{Binding IsMeasuring, Converter={StaticResource BoolToInvertConverter}}" MinWidth="200">
                <StackPanel>
                    <TextBlock Text="配置参数" Foreground="Green" Margin="0,10,0,0"/>
                    <DockPanel Margin="0,10,0,0">
                        <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">电压输出模式</TextBlock>
                        <ComboBox SelectedIndex="{Binding OutputType}">
                            <ComboBoxItem Content="正常模式"/>
                            <ComboBoxItem Content="查表模式"/>
                            <ComboBoxItem Content="配置文件模式"/>
                        </ComboBox>
                    </DockPanel>
                    <StackPanel Margin="0,10,0,0" Visibility="{Binding IsEnableConfigFileOutput, Converter={StaticResource BoolToVisibilityConverter}}">
                        <DockPanel Margin="0,10,0,0">
                            <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">文件路径</TextBlock>
                            <Button Content="选择文件" Click="SelcetImportConfigFile_Click"/>
                        </DockPanel>
                        <TextBox  Margin="0,10,0,0" Text="{Binding ImportConfigFile}" IsReadOnly="True"/>
                    </StackPanel>
                    <StackPanel Visibility="{Binding IsEnableNormalOutput, Converter={StaticResource BoolToVisibilityConverter}}">
                        <DockPanel Margin="0,10,0,0">
                            <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">起始测试电压(V)</TextBlock>
                            <TextBox Text="{Binding MinVoltage, UpdateSourceTrigger=Explicit}"  KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus"/>
                        </DockPanel>
                        <DockPanel Margin="0,10,0,0">
                            <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">终止测试电压(V)</TextBlock>
                            <TextBox Text="{Binding MaxVoltage, UpdateSourceTrigger=Explicit}"  KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus"/>
                        </DockPanel>
                        <DockPanel Margin="0,10,0,0">
                            <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">电压间隔(V)</TextBlock>
                            <TextBox Text="{Binding VoltageInterval, UpdateSourceTrigger=Explicit}"  KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus"/>
                        </DockPanel>
                    </StackPanel>
                    <StackPanel Visibility="{Binding IsEnableLoopupTableOutput, Converter={StaticResource BoolToVisibilityConverter}}">
                        <DataGrid ItemsSource="{Binding VoltageTable}"
                              SelectedIndex="{Binding TalbleIndex}"
                              MaxHeight="300"
                              MinHeight="100"
                              Margin="0,10,0,0"
                              AutoGenerateColumns="False" 
                              CanUserAddRows="True">
                            <DataGrid.ContextMenu>
                                <ContextMenu  StaysOpen="True">
                                    <MenuItem Header="插入" cal:Message.Attach="InsertTableItem"/>
                                    <MenuItem Header="删除" cal:Message.Attach="DeleteTableItem"/>
                                    <MenuItem Header="清空" cal:Message.Attach="ClearTable"/>
                                    <MenuItem Header="保存" cal:Message.Attach="SaveTable"/>
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="电压(V)" Binding="{Binding Voltage}" MinWidth="200"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </StackPanel>
                <Expander Header="高级设置" Margin="0,10,0,0">
                    <StackPanel IsEnabled="{Binding IsAdmin}">
                        <DockPanel Margin="0,10,0,0">
                            <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" MinWidth="100">稳定时间(MS)</TextBlock>
                            <TextBox Text="{Binding SampleTime, UpdateSourceTrigger=Explicit}"  KeyDown="TextBox_KeyDown" LostFocus="TextBox_LostFocus"/>
                        </DockPanel>
                    </StackPanel>
                </Expander>
                <Button cal:Message.Attach="UpdateHardware" Margin="0,10,0,0">刷新硬件</Button>
            </StackPanel>
        </Expander>

    </Grid>
</UserControl>
